// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "proving_network.proto" (package "proving_network", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ProvingNetwork } from "./proving_network";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ProveTaskResponse } from "./proving_network";
import type { ProveTaskRequest } from "./proving_network";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service proving_network.ProvingNetwork
 */
export interface IProvingNetworkClient {
    /**
     * @generated from protobuf rpc: ProveTask
     */
    proveTask(input: ProveTaskRequest, options?: RpcOptions): UnaryCall<ProveTaskRequest, ProveTaskResponse>;
}
/**
 * @generated from protobuf service proving_network.ProvingNetwork
 */
export class ProvingNetworkClient implements IProvingNetworkClient, ServiceInfo {
    typeName = ProvingNetwork.typeName;
    methods = ProvingNetwork.methods;
    options = ProvingNetwork.options;
    // @ts-ignore
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ProveTask
     */
    proveTask(input: ProveTaskRequest, options?: RpcOptions): UnaryCall<ProveTaskRequest, ProveTaskResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ProveTaskRequest, ProveTaskResponse>("unary", this._transport, method, opt, input);
    }
}
